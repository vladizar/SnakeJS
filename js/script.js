const gameScreen=document.querySelector(".game-screen"),menuScreen=document.querySelector(".menu-screen"),gameSettingsForm=menuScreen.querySelector(".game-settings-form"),gameSettingsLength=gameSettingsForm.querySelector("input[name=snake-start-length]"),gameSettingsDirection=gameSettingsForm.querySelector("select[name=snake-start-direction]"),gameSettingsSpeed=gameSettingsForm.querySelector("input[name=snake-start-speed]"),gameSettingsSpeedMultiplier=gameSettingsForm.querySelector("input[name=snake-speed-multiplier]"),gameSettingsView=gameSettingsForm.querySelector("select[name=snake-body-view]"),gameSettingsFieldSize=gameSettingsForm.querySelector("input[name=game-field-size]"),gameSettingsFieldInfinity=gameSettingsForm.querySelector("select[name=game-field-infinity]"),gameSettingsMaxFruitsNumber=gameSettingsForm.querySelector("input[name=game-max-fruits]"),gameSettingsFruitsSpawnInterval=gameSettingsForm.querySelector("input[name=fruits-spawn-delay]"),deathScreen=document.querySelector(".death-screen"),playAgainButton=deathScreen.querySelector(".button_play"),goLobbyButton=deathScreen.querySelector(".button_menu"),timeoutOneSecond=1e3,chanceBanana=.2,chanceStrawberry=.1,chanceGrapes=.05;let gameFrames,fruitsSpawn,fruits=[],snake=[],gameSettings={},direction="",score=0,speed=0,touchPositions=[{x:0,y:0},{x:0,y:0}];const gameField=gameScreen.querySelector(".game-screen__field"),scoreCounter=gameScreen.querySelector(".game-screen__score"),deathScore=deathScreen.querySelector(".death-screen__score");function spawnElement(e,t,n,a){const s=document.createElement("div");for(const t of e)s.classList.add(t);s.style.gridColumnStart=t,s.style.gridRowStart=n,a.push(s),gameField.append(s)}function removeElement(e,t){gameField.removeChild(e[t]),e.splice(t,1)}function moveElement(e,t,n){e.style.gridColumnStart=t,e.style.gridRowStart=n}function isOnfieldPosition(e,t){return!(e>gameSettings.gameFieldSize||t>gameSettings.gameFieldSize||e<1||t<1)}function isPositionCollisions(e,t,n,a=[-1]){for(const s of n)for(let n=0;n<s.length;n++){const i=s[n];if(i.style.gridColumnStart==e&&i.style.gridRowStart==t){if(a[n]==n)continue;return n}}return!1}function getRandomInt(e){return Math.floor(Math.random().toFixed(8)*(e+1))}function getChance(){return Math.random().toFixed(2)}function getRandomFieldPosition(){return{x:getRandomInt(gameSettings.gameFieldSize),y:getRandomInt(gameSettings.gameFieldSize)}}function chooseRandomFruit(){return getChance()<=.05?"grapes":getChance()<=.1?"strawberry":getChance()<=.2?"banana":fruits.length?"apple-yellow":"apple-red"}function addFruitScore(e){switch(e){case"apple-yellow":score++;break;case"apple-red":score+=2;break;case"banana":score+=3;break;case"strawberry":score+=5;break;case"grapes":score+=10}}function spawnFruit(){if(fruits.length<gameSettings.maxFruitsNumber){let e;do{e=getRandomFieldPosition()}while(isPositionCollisions(e.x,e.y,[fruits,snake])||!isOnfieldPosition(e.x,e.y));fruitClass=chooseRandomFruit(),spawnElement(["fruit",fruitClass],e.x,e.y,fruits)}}function switchDirection(e){switch(e){case"ArrowRight":direction=Number(snake[0].style.gridColumnStart)+1==snake[1].style.gridColumnStart?direction:e;break;case"ArrowLeft":direction=Number(snake[0].style.gridColumnStart)-1==snake[1].style.gridColumnStart?direction:e;break;case"ArrowUp":direction=Number(snake[0].style.gridRowStart)-1==snake[1].style.gridRowStart?direction:e;break;case"ArrowDown":direction=Number(snake[0].style.gridRowStart)+1==snake[1].style.gridRowStart?direction:e}}function spawnSnake(e,t){let n=snakePosY=Math.floor(gameSettings.gameFieldSize/2);spawnElement(["snake-block","snake-block_head"],n,snakePosY,snake);for(let a=1;a<e;a++)switch(t){case"ArrowRight":spawnElement(["snake-block"],n-a,snakePosY,snake);break;case"ArrowLeft":spawnElement(["snake-block"],n+a,snakePosY,snake);break;case"ArrowUp":spawnElement(["snake-block"],n,snakePosY+a,snake);break;case"ArrowDown":spawnElement(["snake-block"],n,snakePosY-a,snake)}}function moveSnake(){for(let e=snake.length-1;e>0;e--)moveElement(snake[e],snake[e-1].style.gridColumnStart,snake[e-1].style.gridRowStart);switch(direction){case"ArrowRight":isOnfieldPosition(Number(snake[0].style.gridColumnStart)+1,1)?snake[0].style.gridColumnStart++:gameSettings.gameFieldInfinity?snake[0].style.gridColumnStart=1:endGame();break;case"ArrowLeft":isOnfieldPosition(Number(snake[0].style.gridColumnStart)-1,1)?snake[0].style.gridColumnStart--:gameSettings.gameFieldInfinity?snake[0].style.gridColumnStart=gameSettings.gameFieldSize:endGame();break;case"ArrowUp":isOnfieldPosition(1,Number(snake[0].style.gridRowStart)-1)?snake[0].style.gridRowStart--:gameSettings.gameFieldInfinity?snake[0].style.gridRowStart=gameSettings.gameFieldSize:endGame();break;case"ArrowDown":isOnfieldPosition(1,Number(snake[0].style.gridRowStart)+1)?snake[0].style.gridRowStart++:gameSettings.gameFieldInfinity?snake[0].style.gridRowStart=1:endGame()}}function startGame(e=0){gameScreen.style.display="",setTimeout(()=>{menuScreen.style.display=deathScreen.style.display="none",gameFrames=setInterval(gameFrame,1e3/speed)},e),gameField.style.gridTemplateRows=gameField.style.gridTemplateColumns="repeat("+gameSettings.gameFieldSize+", 1fr)",gameField.style.gridGap=gameSettings.snakeView,gameField.innerHTML="",speed=gameSettings.speed,direction=gameSettings.direction,score=scoreCounter.textContent=0,snake=[],fruits=[],spawnSnake(gameSettings.snakeLength,direction),spawnFruit(),fruitsSpawn=setInterval(spawnFruit,1e3*gameSettings.fruitsSpawnInterval)}function endGame(){clearInterval(gameFrames),clearInterval(fruitsSpawn),deathScore.textContent=score,menuScreen.style.display="none",deathScreen.style.display=gameScreen.style.display=""}function gameFrame(){moveSnake(),isPositionCollisions(snake[0].style.gridColumnStart,snake[0].style.gridRowStart,[snake],[0,1,2,3])&&endGame();let e=isPositionCollisions(snake[0].style.gridColumnStart,snake[0].style.gridRowStart,[fruits]);(e||0===e)&&(addFruitScore(fruits[e].classList[1]),speed+=(score-scoreCounter.textContent)*gameSettings.speedMultiplier,clearInterval(gameFrames),gameFrames=setInterval(gameFrame,1e3/speed),scoreCounter.textContent=score,removeElement(fruits,e),spawnElement(["snake-block"],snake[snake.length-1].style.gridColumnStart,snake[snake.length-1].style.gridRowStart,snake),fruits.length||spawnFruit())}document.addEventListener("touchstart",(function(e){touchPositions[0].x=e.changedTouches[0].pageX,touchPositions[0].y=e.changedTouches[0].pageY}),!1),document.addEventListener("touchend",(function(e){if(touchPositions[1].x=e.changedTouches[0].pageX,touchPositions[1].y=e.changedTouches[0].pageY,Math.abs(touchPositions[0].x-touchPositions[1].x)>Math.abs(touchPositions[0].y-touchPositions[1].y)&&Math.abs(touchPositions[0].x-touchPositions[1].x)>30){switchDirection(touchPositions[0].x>touchPositions[1].x?"ArrowLeft":"ArrowRight")}else if(Math.abs(touchPositions[0].y-touchPositions[1].y)>30){switchDirection(touchPositions[0].y>touchPositions[1].y?"ArrowUp":"ArrowDown")}}),!1),window.onkeydown=function(e){switchDirection(e.key)},gameSettingsForm.onsubmit=function(e){e.preventDefault(),gameSettings={snakeLength:Number(gameSettingsLength.value),direction:gameSettingsDirection.value,speed:Number(gameSettingsSpeed.value),speedMultiplier:Number(gameSettingsSpeedMultiplier.value),gameFieldSize:Number(gameSettingsFieldSize.value),gameFieldInfinity:Boolean(Number(gameSettingsFieldInfinity.value)),maxFruitsNumber:Number(gameSettingsMaxFruitsNumber.value),fruitsSpawnInterval:Number(gameSettingsFruitsSpawnInterval.value),snakeView:gameSettingsView.value},startGame(400)},goLobbyButton.onclick=function(){gameScreen.style.display=deathScreen.style.display="none",menuScreen.style.display=""},playAgainButton.onclick=function(){startGame()};